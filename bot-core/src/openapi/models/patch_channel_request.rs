/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PatchChannelRequest : チャンネル情報変更リクエスト



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PatchChannelRequest {
    /// チャンネル名
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// アーカイブされているかどうか
    #[serde(rename = "archived", skip_serializing_if = "Option::is_none")]
    pub archived: Option<bool>,
    /// 強制通知チャンネルかどうか
    #[serde(rename = "force", skip_serializing_if = "Option::is_none")]
    pub force: Option<bool>,
    /// 親チャンネルUUID
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<uuid::Uuid>,
}

impl PatchChannelRequest {
    /// チャンネル情報変更リクエスト
    pub fn new() -> PatchChannelRequest {
        PatchChannelRequest {
            name: None,
            archived: None,
            force: None,
            parent: None,
        }
    }
}


