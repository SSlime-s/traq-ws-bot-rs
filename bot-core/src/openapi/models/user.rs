/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// User : ユーザー情報

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct User {
    /// ユーザーUUID
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// ユーザー名
    #[serde(rename = "name")]
    pub name: String,
    /// ユーザー表示名
    #[serde(rename = "displayName")]
    pub display_name: String,
    /// アイコンファイルUUID
    #[serde(rename = "iconFileId")]
    pub icon_file_id: uuid::Uuid,
    /// BOTかどうか
    #[serde(rename = "bot")]
    pub bot: bool,
    #[serde(rename = "state")]
    pub state: crate::openapi::models::UserAccountState,
    /// 更新日時
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
}

impl User {
    /// ユーザー情報
    pub fn new(
        id: uuid::Uuid,
        name: String,
        display_name: String,
        icon_file_id: uuid::Uuid,
        bot: bool,
        state: crate::openapi::models::UserAccountState,
        updated_at: String,
    ) -> User {
        User {
            id,
            name,
            display_name,
            icon_file_id,
            bot,
            state,
            updated_at,
        }
    }
}
